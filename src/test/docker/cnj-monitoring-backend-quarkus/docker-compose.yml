# docker-compose.yml
# ----------------------------------------------------------------------------
# Composes Docker containers and volumes to a runnable Quarkus application
# ----------------------------------------------------------------------------
#
---
version: '3'

services:

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: changeit
      POSTGRES_PORT: "5432"
      POSTGRES_DB: cloudtrain
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "--username", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  downstream:
    image: docker.cloudtrain.aws.msgoat.eu/cloudtrain/cnj-monitoring-downstream:latest
    environment:
      DOCKER_JAVA_OPTS: -Xms1g -Xmx1g
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: https://oidc.cloudtrain.aws.msgoat.eu/auth/realms/cloudtrain/protocol/openid-connect/certs
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: https://oidc.cloudtrain.aws.msgoat.eu/auth/realms/cloudtrain

  backend:
    image: ${docker.image.name}:${project.version}
    ports:
      - "38080:8080"
    environment:
      QUARKUS_PROFILE: dev
      DOCKER_JAVA_OPTS: -Xms1g -Xmx1g
      MP_JWT_VERIFY_PUBLICKEY_LOCATION: "https://oidc.cloudtrain.aws.msgoat.eu/auth/realms/cloudtrain/protocol/openid-connect/certs"
      MP_JWT_VERIFY_ISSUER: "https://oidc.cloudtrain.aws.msgoat.eu/auth/realms/cloudtrain"
      CLOUDTRAIN_SERVICES_GRANTEDPERMISSIONS_MP_REST_URL: "http://downstream:8080"
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: changeit
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/cloudtrain
      WAIT_FOR_PORTS: "postgres:5432"
    depends_on:
      postgres:
        condition: service_healthy
      downstream:
        condition: service_started

volumes:

  postgres-data:
